[global_tags]

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "5s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8089"]
  # urls = ["http://127.0.0.1:8086"]
  urls = ["<influx address>"]
  token = "<token>"
  bucket = "<bucket name>"
  organization = "<organisation name>"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false


# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]

  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  # no configuration

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  ## Uncomment to remove deprecated metrics.
  # fielddrop = ["uptime_format"]

# Read the CPU temperature - Raspberry Pi style
[[inputs.file]]
  files = ["/sys/class/thermal/thermal_zone0/temp"]
  name_override = "cpu_temperature"
  data_format = "value"
  data_type = "integer"

[[inputs.net]]
  # collect data only about specific interfaces
  interfaces = ["eth0"]

[[inputs.netstat]]
  # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

[[inputs.interrupts]]
  # no configuration

[[inputs.linux_sysctl_fs]]
  # no configuration

## Read the current frequency of each CPU core
[[inputs.exec]]
  commands = ["cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq"]
  name_suffix = "_freq_arm0"
  data_format = "value"
  data_type = "integer"

[[inputs.exec]]
  commands = ["cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq"]
  name_suffix = "_freq_arm1"
  data_format = "value"
  data_type = "integer"

[[inputs.exec]]
  commands = ["cat /sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq"]
  name_suffix = "_freq_arm2"
  data_format = "value"
  data_type = "integer"

[[inputs.exec]]
  commands = ["cat /sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq"]
  name_suffix = "_freq_arm3"
  data_format = "value"
  data_type = "integer"

